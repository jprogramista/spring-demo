spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springDemoDb?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: springdemo
    password: springdemopass
    tomcat:
      max-wait: 20000
      max-active: 50
      max-idle: 20
      min-idle: 15
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        id:
          new_generator_mappings: false
        format_sql: true
        ddl-auto: update
    generate-ddl: true

  data:
    rest:
      basePath: /api
      detection-strategy: annotated

  messages:
    basename: messages/messages

logging:
  level:
    org.springframework.data: DEBUG
    org.springframework.security: DEBUG

facebook:
  client:
    clientId:
    clientSecret:
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: email
  resource:
    userInfoUri: https://graph.facebook.com/me?fields=id,email

github:
  client:
    clientId:
    clientSecret:
    accessTokenUri: https://github.com/login/oauth/access_token
    userAuthorizationUri: https://github.com/login/oauth/authorize
    clientAuthenticationScheme: form
    scope: email
  resource:
    userInfoUri: https://api.github.com/user

google:
  client:
    clientId:
    clientSecret:
    accessTokenUri: https://accounts.google.com/o/oauth2/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
    clientAuthenticationScheme: form
    scope: email
  resource:
    userInfoUri:  https://www.googleapis.com/oauth2/v3/userinfo

linkedIn:
  client:
    clientId:
    clientSecret:
    accessTokenUri: https://www.linkedin.com/oauth/v2/accessToken
    userAuthorizationUri: https://www.linkedin.com/oauth/v2/authorization
    scope: email
  resource:
    userInfoUri: https://api.linkedin.com/v1/people/~?format=json

# currently Twitter does not support OAuth 2.0, so we need other way to authenticate

#twitter:
#  client:
#    clientId:
#    clientSecret:
#    accessTokenUri: https://api.twitter.com/oauth/access_token
#    userAuthorizationUri: https://api.twitter.com/oauth/authorize
#    clientAuthenticationScheme: form
#  resource:
#    userInfoUri:  https://api.twitter.com/1.1/users/show.json
